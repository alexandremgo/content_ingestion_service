name: Worker workflow

on: 
  push:
    paths:
    - "content_ingestion_worker/**"
    - ".github/workflows/content_ingestion_worker.yml"
  pull_request:

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.6.3
  SQLX_FEATURES: "rustls,postgres"

# Cancels in-progress job or run from the same concurrency group
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: content_ingestion_worker

jobs:
  test:
    name: Worker Tests
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:3.12.0-management
        ports:
          - "5672:5672"
          - "15672:15672"
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup MinIO and create integration tests bucket
        run: |
          docker run -d -p 9000:9000 --name minio \
            -e "MINIO_ROOT_USER=minio" \
            -e "MINIO_ROOT_PASSWORD=password" \
            -e "MINIO_SITE_REGION=eu-fr-1" \
            -e "MINIO_SITE_NAME=par-rack-1" \
            -v /tmp/data:/data \
            -v /tmp/config:/root/.minio \
            minio/minio server /data

      - name: Setup Meilisearch
        run: |
          docker run -d -p 7700:7700 --name meilisearch \
            -e "MEILI_MASTER_KEY=masterkey" \
            -e "MEILI_NO_ANALYTICS=true" \
            -v /tmp/data.ms:/data.ms \
            getmeili/meilisearch:v1.2.0

        # This GitHub Action installs a Rust toolchain using rustup. It is designed for one-line concise usage and good defaults.
      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # A GitHub Action that implements smart caching for rust/cargo projects with sensible defaults.
      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2

      - name: Setup MinIO and Meilisearch
        run: cd .. && SKIP_DOCKER=true SKIP_MEILISEARCH=true SKIP_POSTGRES=true ./scripts/init_infra.sh

      - name: Run tests
        run: RUST_LOG="sqlx=error,info" TEST_LOG=enabled cargo test

  # `cargo fmt` job
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          # Specific to dtolnay/rust-toolchain: Comma-separated string of additional components to install
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check
